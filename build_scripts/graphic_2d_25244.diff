diff --git a/rosen/modules/render_service_base/src/pipeline/rs_render_node.cpp b/rosen/modules/render_service_base/src/pipeline/rs_render_node.cpp
index a6e824dbee6185ee063fab2d34bdc572ccda6079..9581cb19f85c97cd7abd2d236f962cdb6ab83bde 100755
--- a/rosen/modules/render_service_base/src/pipeline/rs_render_node.cpp
+++ b/rosen/modules/render_service_base/src/pipeline/rs_render_node.cpp
@@ -2361,7 +2361,9 @@ bool RSRenderNode::UpdateFilterCacheWithBelowDirty(const Occlusion::Region& belo
 {
 #if defined(RS_ENABLE_GL) || defined(RS_ENABLE_VK)
     if (!RSProperties::filterCacheEnabled_) {
+#ifndef ROSEN_ARKUI_X
         ROSEN_LOGE("RSRenderNode::UpdateFilterCacheWithBelowDirty filter cache is disabled.");
+#endif
         return false;
     }
     auto filterDrawable = GetFilterDrawable(isForeground);
diff --git a/rosen/modules/render_service_client/core/render_thread/rs_render_thread_visitor.cpp b/rosen/modules/render_service_client/core/render_thread/rs_render_thread_visitor.cpp
index dd6e07b1cb411a4545e0c2fb17ee311ff0195675..9e43f15d52aa58715ab4348ca1a365676917bdb3 100644
--- a/rosen/modules/render_service_client/core/render_thread/rs_render_thread_visitor.cpp
+++ b/rosen/modules/render_service_client/core/render_thread/rs_render_thread_visitor.cpp
@@ -758,8 +758,8 @@ void RSRenderThreadVisitor::ProcessSurfaceViewInRT(RSSurfaceRenderNode& node)
         RS_LOGE("RSRenderThreadVisitor::ProcessSurfaceViewInRT nodeId is %{public}" PRIu64
                 " cannot find surface by surfaceId %{public}" PRIu64 "",
             node.GetId(), node.GetSurfaceId());
-        RS_TRACE_NAME_FMT("RSRenderThreadVisitor::ProcessSurfaceViewInRT nodeId is " PRIu64
-                " cannot find surface by surfaceId " PRIu64 "",
+        RS_TRACE_NAME_FMT("RSRenderThreadVisitor::ProcessSurfaceViewInRT nodeId is %" PRIu64
+                " cannot find surface by surfaceId %" PRIu64 "",
             node.GetId(), node.GetSurfaceId());
         return;
     }
